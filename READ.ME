ENTITY (DATA CLASS)- TABLE WITHIN DATABASE,ROOM LIBRARY CREATE TABLE FOR EACH CLASS THAT HAS ENTITY ANNOTATION
FIELD IN CLASS ARE COLUMN IN THIS TABLE
ENTITY CLASS SMALL MODEL CLASS THAT CONTAIN NO LOGIC

DAO - DATA ACCESS OBJECT(INTERFACE)
DAO ARE RESPONSIBLE  FOR DEFINE METHOD THAT ACCESS DATABASE
DAO CONTAIN SQL QUERY @INSERT @UPDATE @DELETE

suspend tell compiler our function will run inside coroutine function will run in background
thread later in viewModel

GOOD PRACTICE TO USE COROUTINE FOR ALL DATABASE QUERY


COMPANION OBJECT IS SAME AS PUBLIC STATIC FINAL CLASS IN JAVA SO DIRECT GET REFERENCE FROM COMPANION
OBJECT

VOLATILE - WRITE TO THIS FIELD ARE IMMEDIATELY MADE VISIBLE TO OTHER THREADS.


WHEN THREAD CALL SYNCHRONIZE,IT ACQUIRES THE LOCK OF THAT SYNCHRONIZED BLOCK.OTHER THREAD DONT HAVE
PERMISSION TO CALL THAT SAME SYNCHRONIZED BLOCK AS LONG AS PREVIOUS THREAD WHICH HAD ACQUIRED
LOCK DOES NOT RELEASE LOCK

SYNCHRONIZED  - DON'T LET MULTIPLE THREAD CREATE MULTIPLE INSTANCE,ONLY ONE THREAD ABLE TO ACCESS
CODE INSIDE SYNCHRONIZED BLOCK

ROOM - ALLOW ONLY PRIMITIVE TYPE ,FOR CUSTOM OBJECT USE TYPECONVERTER.

REPOSITORY - ABSTRACT ACCESS TO MULTIPLE DATA SOURCES,PROVIDE CLEAN API FOR DATA ACCESS TO REST OF
APPLICATION

VIEWMODEL - PROVIDE DATA TO UI AND SURVIVE CONFIGURATION CHANGES,ACT AS COMMUNICATION CENTER
BETWEEN REPOSITORY AND UI

INIT - CALL WHEN CLASS IS INITIALIZE FIRST